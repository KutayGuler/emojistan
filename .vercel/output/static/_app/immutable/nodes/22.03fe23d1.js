import{S as K,i as Q,s as X,a8 as Y,a as I,k as b,y as ee,q as w,a5 as te,h as f,c as $,l as g,m as E,z as oe,r as v,p as J,n as y,b as d,A as ae,G as u,a9 as ne,aa as se,u as le,g as re,d as ie,B as pe,P as x,O as V}from"../chunks/index.8e69b878.js";import{E as A,C as F,a as C,D as T,I as fe}from"../chunks/store.55a48864.js";import{g as N,h as Z,i as G,E as R}from"../chunks/index.8d01d5d1.js";import{T as ce}from"../chunks/Tutorial.401a5670.js";import{E as U}from"../chunks/Rulebox.92ec5d3f.js";function W(r){let t,n,a,s;return{c(){t=b("button"),n=w("⮜"),this.h()},l(o){t=g(o,"BUTTON",{class:!0});var l=E(t);n=v(l,"⮜"),l.forEach(f),this.h()},h(){y(t,"class","btn-lg btn")},m(o,l){d(o,t,l),u(t,n),a||(s=x(t,"click",r[3]),a=!0)},p:V,d(o){o&&f(t),a=!1,s()}}}function ue(r){let t,n;return{c(){t=b("a"),n=w("CONTROLLABLE ⮞"),this.h()},l(a){t=g(a,"A",{href:!0,class:!0});var s=E(t);n=v(s,"CONTROLLABLE ⮞"),s.forEach(f),this.h()},h(){y(t,"href","/tutorial/controllable"),y(t,"class","btn-lg btn")},m(a,s){d(a,t,s),u(t,n)},p:V,d(a){a&&f(t)}}}function me(r){let t,n,a,s;return{c(){t=b("button"),n=w("⮞"),this.h()},l(o){t=g(o,"BUTTON",{class:!0});var l=E(t);n=v(l,"⮞"),l.forEach(f),this.h()},h(){y(t,"class","btn-lg btn")},m(o,l){d(o,t,l),u(t,n),a||(s=x(t,"click",r[4]),a=!0)},p:V,d(o){o&&f(t),a=!1,s()}}}function de(r){let t,n,a,s,o,l,m=r[0]+1+"",j,B,z=r[2].length+"",P,q,O,k;const L=[r[1]];let D={};for(let e=0;e<L.length;e+=1)D=Y(D,L[e]);n=new ce({props:D});let i=r[0]>0&&W(r);function H(e,c){if(e[0]<e[2].length-1)return me;if(e[0]===e[2].length-1)return ue}let _=H(r),p=_&&_(r);return{c(){t=I(),a=b("div"),ee(n.$$.fragment),s=I(),o=b("div"),l=b("p"),j=w(m),B=w(" / "),P=w(z),q=I(),i&&i.c(),O=I(),p&&p.c(),this.h()},l(e){te("svelte-6glrt7",document.head).forEach(f),t=$(e),a=g(e,"DIV",{style:!0});var S=E(a);oe(n.$$.fragment,S),s=$(e),o=g(e,"DIV",{class:!0});var h=E(o);l=g(h,"P",{class:!0});var M=E(l);j=v(M,m),B=v(M," / "),P=v(M,z),M.forEach(f),q=$(h),i&&i.l(h),O=$(h),p&&p.l(h),h.forEach(f),this.h()},h(){document.title="Emojistan | Tutorial - Effector",J(a,"display","contents"),J(a,"--header",R),y(l,"class","absolute -top-8 w-full"),y(o,"class","absolute bottom-4 right-4 flex items-center justify-center gap-2")},m(e,c){d(e,t,c),d(e,a,c),ae(n,a,null),d(e,s,c),d(e,o,c),u(o,l),u(l,j),u(l,B),u(l,P),u(o,q),i&&i.m(o,null),u(o,O),p&&p.m(o,null),k=!0},p(e,[c]){const S=c&2?ne(L,[se(e[1])]):{};n.$set(S),(!k||c&1)&&m!==(m=e[0]+1+"")&&le(j,m),e[0]>0?i?i.p(e,c):(i=W(e),i.c(),i.m(o,O)):i&&(i.d(1),i=null),_===(_=H(e))&&p?p.p(e,c):(p&&p.d(1),p=_&&_(e),p&&(p.c(),p.m(o,null)))},i(e){k||(re(n.$$.fragment,e),k=!0)},o(e){ie(n.$$.fragment,e),k=!1},d(e){e&&f(t),e&&n&&f(a),pe(n,e),e&&f(s),e&&f(o),i&&i.d(),p&&p.d()}}}function _e(r,t,n){const a=[{header:"Effector",description:'Effector takes an emoji and a number input. Emoji is the effector itself and the number below it is the number of times it can be used before it disappears. It can be a number between 1 and 100 or "Infinite".',component:U,rbx:{id:"0",type:"effector",position:{x:0,y:0},width:N,height:Z,bgColor:G,borderColor:R},props:{id:"0",emoji:"test-tube"},gameProps:{map:new A(new Map([["0_5","woman-walking"],["0_6","test-tube"]])),controllables:new Map([["1",new F("woman-walking",1,[["0",-1]],new C("",0),new T("skull"))]]),effectors:new Map([["0",{emoji:"test-tube",hp:1,type:"equippable"}]]),mapClass:"simulation",SIZE:4}},{description:"Just like in real life, the effect of the Effector depends on who used it.",component:U,rbx:{id:"2",type:"effector",position:{x:0,y:0},width:N,height:Z,bgColor:G,borderColor:R},props:{id:"2",emoji:"test-tube"},gameProps:{map:new A(new Map([["0_5","monkey"],["0_6","test-tube"]])),controllables:new Map([["1",new F("monkey",1,[["2",1]],new C("pig",2),new T(""))],["3",new F("pig",1,[["any",0]],new C("",0),new T(""))]]),effectors:new Map([["2",{emoji:"test-tube",hp:1,type:"equippable"}]]),mapClass:"simulation",SIZE:4}},{description:"Effectors can also be used on the entities other than the player.",component:U,rbx:{id:"2",type:"effector",position:{x:0,y:0},width:N,height:Z,bgColor:G,borderColor:R},props:{id:"2",emoji:"axe"},gameProps:{map:new A(new Map([["0_5","woman-walking"],["0_6","axe"],["0_11","evergreen-tree"],["0_14","evergreen-tree"],["0_15","evergreen-tree"]])),controllables:new Map([["1",new F("woman-walking",1,[],new C("",0),new T(""))]]),interactables:new Map([["-1",new fe("evergreen-tree","-1",3,[["2",-1,"none"]],new C("",0),new T(""),["3",2])]]),effectors:new Map([["2",{emoji:"axe",hp:9,type:"equippable"}],["3",{emoji:"wood",hp:1,type:"equippable"}]]),mapClass:"simulation",SIZE:4}}];let s=0,o=a[s];const l=()=>n(0,s--,s),m=()=>n(0,s++,s);return r.$$.update=()=>{r.$$.dirty&1&&n(1,o=a[s])},[s,o,a,l,m]}class ve extends K{constructor(t){super(),Q(this,t,_e,de,X,{})}}export{ve as component};
